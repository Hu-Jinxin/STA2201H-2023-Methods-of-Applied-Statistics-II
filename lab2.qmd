---
title: "lab2"
author: "Kerry Hu"
format: pdf
editor: visual
---

# Lab Exercises

To be handed in via submission of quarto file (and rendered pdf) to GitHub.

1.  Using the \`delay_2022\` data, plot the five stations with the highest mean delays. Facet the graph by \`line\`.

```{r}
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)

res <- list_package_resources("996cfe8d-fb35-40ce-b569-698d51fc683b") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "202.?"))
delay_2022_ids <- res |> filter(year==2022) |> select(id) |> pull()
delay_2022 <- get_resource(delay_2022_ids)

# make the column names nicer to work with

delay_2022 <- clean_names(delay_2022)
delay_2022 <- delay_2022 |> filter(line %in% c("BD", "YU", "SHP", "SRT"))
delay_2022 |>
  group_by(line, station) |>
  summarise(mean_delay = mean(min_delay)) |>
  arrange(-mean_delay) |>
  slice(1:5) |>
  ggplot(aes(x = station,
             y = mean_delay)) +
  geom_col() + facet_wrap(vars(line), 
             scales = "free_y",
             nrow = 4)+ coord_flip()
```

2.  Using the \`opendatatoronto\` package, download the data on mayoral campaign contributions for 2014. Hints:

-   find the ID code you need for the package you need by searching for 'campaign' in the \`all_data\` tibble above
-   you will then need to \`list_package_resources\` to get ID for the data file
-   note: the 2014 file you will get from \`get_resource\` has a bunch of different campaign contributions, so just keep the data that relates to the Mayor election.

```{r}
library(opendatatoronto)
library(tidyverse)
library(stringr)
library(skimr) # EDA
library(visdat) # EDA
library(janitor)
library(lubridate)
library(ggrepel)

all_data <- list_packages(limit = 500) |>  filter(str_detect(title,"Campaign"))

res <- list_package_resources("f6651a40-2f52-46fc-9e04-b760c16edd5c") # obtained code from searching data frame above
res <- res |> mutate(year = str_extract(name, "2014"))

campaign_2014_ids <- res |> filter(year==2014) |> select(id) |> pull()
campaign1_2014<- get_resource(campaign_2014_ids[1])

```

3.  Clean up the data format (fixing the parsing issue and standardizing the column names using \`janitor\`)

```{r}
library(janitor)
head(campaign1_2014[2]$`2_Mayor_Contributions_2014_election.xls`)
campaign2_2014  <-campaign1_2014[2]$`2_Mayor_Contributions_2014_election.xls`

campaign2_2014 <- campaign2_2014 |> row_to_names(row_number = 1) 

#colnames(campaign2_2014) <- campaign2_2014[1,]
#campaign2_2014 <- campaign2_2014[-1, ] 

# make the column names nicer to work with
names(campaign2_2014)<-janitor::make_clean_names(names(campaign2_2014))
campaign_2014<-campaign2_2014
campaign_2014
```

4.  Summarize the variables in the dataset. Are there missing values, and if so, should we be worried about them? Is every variable in the format it should be? If not, create new variable(s) that are in the right format.

There are 13 variables in the dataset containing contributors_name,contributors_address,contributors_postal_code,contribution_amount,contribution_type_desc,goods_or_service_desc,contributor_type_desc,relationship_to_candidate,president_business_manager, authorized_representative,candidate,office,ward.Number of records was 10199.

There are missing values but we did not worry about them because their name, postal code,contribution candidate are not missing.Thus we could find their address from other database. Other missing variables did not matter due to not our interesting events.

There is not one variable in the format it should be: president_business_manager should be switched into president_or_business_manager.

```{r}
library(skimr)
skim(campaign_2014)
```

```{r}
colnames(campaign2_2014)[9] <- 'president_or_business_manager'
campaign_2014<- campaign2_2014
campaign_2014|> 
  summarize(across(everything(), ~ sum(is.na(.x))))
```

5.  Visually explore the distribution of values of the contributions. What contributions are notable outliers? Do they share a similar characteristic(s)? It may be useful to plot the distribution of contributions without these outliers to get a better sense of the majority of the data.

```{r}
vis_dat(campaign_2014)
class(campaign_2014[4])
numeric_vector <- as.numeric(unlist(campaign_2014[4]))
summary(numeric_vector)
#min=1.00     100     300     608     500  max=508224.73
ggplot(data = campaign_2014) + 
  geom_histogram(aes(x = numeric_vector))+scale_x_log10()
```

1.00 CAD and 508224.73 CAD are outliers.

```{r}
campaign2_2014$contribution_amount<-round(numeric_vector,2)
campaign_2014 <- campaign2_2014
campaign_2014 |> filter(campaign_2014$contribution_amount==1.00|campaign_2014$contribution_amount==508224.73)
```

They did not share a similar characteristic(s).

6.  List the top five candidates in each of these categories:
    -   total contributions
    -   mean contribution
    -   number of contributions

```{r}
library(janitor)
campaign_2014<-campaign2_2014
class(campaign_2014$contribution_amount)
campaign_2014 |> group_by(candidate) |> summarize(sum_cont=sum(contribution_amount)) |> arrange(-sum_cont)|>slice(1:5)
campaign_2014 |> group_by(candidate) |> summarize(mean_cont=mean(contribution_amount)) |> arrange(-mean_cont)|>slice(1:5)
campaign_2014 |> group_by(candidate) |> summarize(num_contribution=length(contributors_name)) |> arrange(-num_contribution)|>slice(1:5)
```

7.  Repeat 5 but without contributions from the candidates themselves.

```{r}
library(janitor)
campaign_2014<-campaign2_2014
campaign_2014 |> group_by(candidate)|>filter(contributors_name!=candidate) |>summarize(sum_cont=sum(contribution_amount)) |> arrange(-sum_cont)|>slice(1:5)
campaign_2014 |> group_by(candidate)|>filter(contributors_name!=candidate) |> summarize(mean_cont=mean(contribution_amount)) |> arrange(-mean_cont)|>slice(1:5)
campaign_2014 |> group_by(candidate)|>filter(contributors_name!=candidate)|> summarize(num_contribution=length(contributors_name)) |> arrange(-num_contribution)|>slice(1:5)
```

8.  How many contributors gave money to more than one candidate?

```{r}
library(janitor)
library(dplyr)
campaign_2014<-campaign2_2014

camp2<- campaign_2014 |> group_by(contributors_name)|>select(contributors_name,candidate) |> summarize(num_candidates=n_distinct(candidate))|>
  filter(num_candidates>1)
nrow(camp2)
length(camp2$contributors_name)

#campaign_2014 |> group_by(contributors_name)|>select(contributors_name,candidate) |> distinct()|>
#n_distinct(candidate)
#camp1
#sum(table(camp1$contributors_name)-1)

```

184 contributors gave money to more than one candidate.
